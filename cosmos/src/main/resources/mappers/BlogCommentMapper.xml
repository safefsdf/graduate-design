<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiuqi.cosmos.dao.BlogCommentMapper">
  <resultMap id="BaseResultMap" type="com.jiuqi.cosmos.entity.BlogComment">
    <id column="blog_comment_id" jdbcType="INTEGER" property="blogCommentId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="recipe_id" jdbcType="INTEGER" property="recipeId" />
    <result column="blog_comment_pid" jdbcType="INTEGER" property="blogCommentPid" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
	    delete from tb_blog_comment
	    where blog_comment_id = #{blogCommentId,jdbcType=INTEGER}
  </delete>
   <delete id="deleteByrecipeId" parameterType="java.lang.Integer">
	    delete from tb_blog_comment
	    where recipe_id = #{recipeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jiuqi.cosmos.entity.BlogComment">
    insert into tb_blog_comment (blog_comment_id, user_id, recipe_id, 
      blog_comment_pid, create_time, content
      )
    values (#{blogCommentId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{recipeId,jdbcType=INTEGER}, 
      #{blogCommentPid,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.jiuqi.cosmos.entity.BlogComment">
    update tb_blog_comment
    set user_id = #{userId,jdbcType=INTEGER},
      recipe_id = #{recipeId,jdbcType=INTEGER},
      blog_comment_pid = #{blogCommentPid,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where blog_comment_id = #{blogCommentId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select blog_comment_id, user_id, recipe_id, blog_comment_pid, create_time, content
    from tb_blog_comment
    where blog_comment_id = #{blogCommentId,jdbcType=INTEGER}
  </select>
   <select id="selectByrecipeId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select blog_comment_id, user_id, recipe_id, blog_comment_pid, create_time, content
    from tb_blog_comment
    where recipe_id = #{recipeId,jdbcType=INTEGER}
  </select>
  <select id="selectByCommentPid" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select blog_comment_id, user_id, recipe_id, blog_comment_pid, create_time, content
    from tb_blog_comment
    where blog_comment_pid = #{blogCommentPid,jdbcType=INTEGER}
  </select>
  
  <select id="selectByCommentPidrecipeId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
	    select blog_comment_id, user_id, recipe_id, blog_comment_pid, create_time, content
	    from tb_blog_comment
	    where blog_comment_pid = #{blogCommentPid,jdbcType=INTEGER} and recipe_id = #{recipeId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select blog_comment_id, user_id, recipe_id, blog_comment_pid, create_time, content
    from tb_blog_comment
  </select>
</mapper>